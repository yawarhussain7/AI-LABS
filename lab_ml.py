# -*- coding: utf-8 -*-
"""Lab_ML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fpP9uQ_Npaw64eyngepwq-9a5barexWm
"""

def min_max(depth, node_index, maximizing_player, values, alpha, beta):
    if depth == 3:
        return values[node_index]

    if maximizing_player:
        best = float('-inf')

        for i in range(0, 2):
            val = min_max(depth + 1, node_index * 2 + i, False, values, alpha, beta)
            best = max(best, val)
            alpha = max(alpha, best)

            if beta <= alpha:
                break
        return best

    else:
        best = float('inf')

        for i in range(0, 2):
            val = min_max(depth + 1, node_index * 2 + i, True, values, alpha, beta)
            best = min(best, val)
            beta = min(beta, best)

            if beta <= alpha:
                break
        return best


if __name__ == "__main__":
    values = [3, 5, 6, 9, 1, 2, 0, -1]
    print(f"Optimal value: {min_max(0, 0, True, values, float('-inf'), float('inf'))}")